#! /usr/bin/bash
####################
# countbarcode
#     Description:
#         Count the sgrna with barcode from paired-end fastq files
####################
function printusage {
    echo "Usage: $0 [-h] -f input1.fq -r input2.fq" 1>&2
}

function printhelp {
    printusage
    echo "" 1>&2
    echo "Parameters:" 1>&2
    echo "    h: print this help" 1>&2
    echo "    f: the forward fastq file to be count reads." 1>&2
    echo "    r: the reverse fastq file to be count reads." 1>&2
    echo "" 1>&2
    echo "Input:" 1>&2
    echo "    the input files should be fastq files." 1>&2
    echo "" 1>&2
    echo "Output:" 1>&2
    echo "    the reads count will be output to /dev/stdout (1>)" 1>&2
}

ov=1

while getopts "hf:r:" opt; do
  case ${opt} in
    h)
      printhelp; exit 0
      ;;
    f)
      fqf=${OPTARG}
      ;;
    r)
      fqr=${OPTARG}
      ;;
    \?)
      echo "Invalid option: -"${OPTARG}
      printusage; exit 1
      ;;
  esac
done


# check the required parameters
if [ -z "${fqf}" ]; then
    printusage
    exit 1
fi

if [ -z "${fqr}" ]; then
    printusage
    exit 1
fi

####################

function reverse_complement {
    rev | tr "ATGC" "TACG"
}

function fq2_to_seqpair {
    cat $2 | reverse_complement | paste $1 - | awk 'FNR % 4 == 2 {print $0}'
}

function fq2_to_seqpair2 {
    cat $2 | reverse_complement | paste $1 - | awk 'FNR % 4 == 2 {print $0}'
    cat $1 | reverse_complement | paste $2 - | awk 'FNR % 4 == 2 {print $0}'
}


function seqpair_guide_barcode {
    awk 'BEGIN {
            HPATTERN="ACCG([ATGC]{20})GTTT[ATGC]{1,35}TGGA([ATCG]{4,6})AACA";
            GPATTERN="ACCG([ATGC]{20})GTTT";
            BPATTERN="TGGA([ATCG]{6})AACA";
        }
        $0 ~ HPATTERN {
            match($1, HPATTERN, a);
            match($2, BPATTERN, b);
            print substr($1, a[1, "start"], a[1, "length"]) FS substr($1, a[2, "start"], a[2, "length"]) FS substr($2, b[1, "start"], b[1, "length"]);
        }' $@
}

function count_guide_barcode {
    awk 'BEGIN {
        FS="\t";
    }
    {
        row=$1 FS $2 FS $3;
        lcount[row] += 1;
    }
    END {
        for (x in lcount) {
            print x " " lcount[x];
        }
    }' $@
}

####################

fq2_to_seqpair2 ${fqf} ${fqr} | seqpair_guide_barcode - | count_guide_barcode | sort -V 


####################
